# Based on http://conda.pydata.org/docs/travis.html
language: minimal
sudo: false # use container based build
notifications:
  email: false
branches:
  except:
    - fix-docs

matrix:
  fast_finish: true
  include:
  - env: CONDA_ENV=py27-min
  - env: CONDA_ENV=py27-cdat+iris+pynio
  - env: CONDA_ENV=py35
  - env: CONDA_ENV=py36
  - env: CONDA_ENV=py37
  - env:
    - CONDA_ENV=py36
    - EXTRA_FLAGS="--run-flaky --run-network-tests"
  - env: CONDA_ENV=py36-netcdf4-dev
    addons:
      apt_packages:
        - libhdf5-serial-dev
        - netcdf-bin
        - libnetcdf-dev
  - env: CONDA_ENV=py36-dask-dev
  - env: CONDA_ENV=py36-pandas-dev
  - env: CONDA_ENV=py36-bottleneck-dev
  - env: CONDA_ENV=py36-condaforge-rc
  - env: CONDA_ENV=py36-pynio-dev
  - env: CONDA_ENV=py36-rasterio
  - env: CONDA_ENV=py36-zarr-dev
  - env: CONDA_ENV=docs
  - env: CONDA_ENV=flake8
  - env: CONDA_ENV=py36-hypothesis

  allow_failures:
  - env:
    - CONDA_ENV=py36
    - EXTRA_FLAGS="--run-flaky --run-network-tests"
  - env: CONDA_ENV=py36-netcdf4-dev
    addons:
      apt_packages:
        - libhdf5-serial-dev
        - netcdf-bin
        - libnetcdf-dev
  - env: CONDA_ENV=py36-pandas-dev
  - env: CONDA_ENV=py36-bottleneck-dev
  - env: CONDA_ENV=py36-condaforge-rc
  - env: CONDA_ENV=py36-pynio-dev
  - env: CONDA_ENV=py36-zarr-dev

before_install:
  - wget http://repo.continuum.io/miniconda/Miniconda3-3.16.0-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no --set show_channel_urls true
  - conda update -q conda
  - conda info -a

install:
  - if [[ "$CONDA_ENV" == "docs" ]]; then
      conda env create -n test_env --file doc/environment.yml;
    elif [[ "$CONDA_ENV" == "flake8" ]]; then
      conda env create -n test_env --file ci/requirements-py37.yml;
    else
      conda env create -n test_env --file ci/requirements-$CONDA_ENV.yml;
    fi
  - source activate test_env
  - conda list
  - pip install --no-deps -e .
  - python xarray/util/print_versions.py

script:
  - which python
  - python --version
  - python -OO -c "import xarray"
  - if [[ "$CONDA_ENV" == "docs" ]]; then
      conda install -c conda-forge sphinx sphinx_rtd_theme sphinx-gallery numpydoc;
      sphinx-build -n -j auto -b html -d _build/doctrees doc _build/html;
    elif [[ "$CONDA_ENV" == "flake8" ]]; then
      flake8 xarray ;
    elif [[ "$CONDA_ENV" == "py36-hypothesis" ]]; then
      pytest properties ;
    else
      py.test xarray --cov=xarray --cov-config ci/.coveragerc --cov-report term-missing --verbose $EXTRA_FLAGS;
    fi

after_success:
  - coveralls
