name: CI Upstream
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *" # Daily “At 00:00” UTC
  workflow_dispatch: # allows you to trigger the workflow run manually

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-ci-trigger:
    name: detect upstream-dev ci trigger
    runs-on: ubuntu-latest
    if: |
      github.repository == 'pydata/xarray'
      && (github.event_name == 'push' || github.event_name == 'pull_request')
    outputs:
      triggered: ${{ steps.detect-trigger.outputs.trigger-found }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: xarray-contrib/ci-trigger@v1.1
        id: detect-trigger
        with:
          keyword: "[test-upstream]"

  upstream-dev:
    name: upstream-dev
    runs-on: ubuntu-latest
    needs: detect-ci-trigger
    if: |
        always()
        && (
            (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch')
            || needs.detect-ci-trigger.outputs.triggered == 'true'
        )
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
    outputs:
      artifacts_availability: ${{ steps.status.outputs.ARTIFACTS_AVAILABLE }}
      artifact_name: ${{ steps.status.outputs.ARTIFACT_NAME }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.
      - name: Set up conda environment
        uses: mamba-org/provision-with-micromamba@34071ca7df4983ccd272ed0d3625818b27b70dcc
        with:
          environment-file: ci/requirements/environment.yml
          environment-name: xarray-tests
          extra-specs: |
            python=${{ matrix.python-version }}
            pytest-reportlog
      - name: Install upstream versions
        run: |
          bash ci/install-upstream-wheels.sh
      - name: Install xarray
        run: |
          python -m pip install --no-deps -e .
      - name: Version info
        run: |
          conda info -a
          conda list
          python xarray/util/print_versions.py
      - name: import xarray
        run: |
          python -c 'import xarray'
      - name: Run Tests
        if: success()
        id: status
        run: |
          python -m pytest --timeout=60 -rf \
            --report-log output-${{ matrix.python-version }}-log.jsonl \
            || (
              echo 'ARTIFACTS_AVAILABLE=true' >> $GITHUB_OUTPUT
              && echo 'ARTIFACT_NAME=output-${{ matrix.python-version }}-log.jsonl' >> $GITHUB_OUTPUT
              && false
            )
      - name: Upload artifacts
        if: |
          failure()
          && steps.status.outcome == 'failure'
          && github.event_name == 'schedule'
          && github.repository == 'pydata/xarray'
        uses: actions/upload-artifact@v3
        with:
          name: output-${{ matrix.python-version }}-log.jsonl
          path: output-${{ matrix.python-version }}-log.jsonl
          retention-days: 5

  report:
    name: report
    needs: upstream-dev
    if: |
      failure()
      && github.event_name == 'schedule'
      && needs.upstream-dev.outputs.artifacts_availability == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - uses: actions/download-artifact@v3
        with:
          path: /tmp/workspace/logs
      - uses: xarray-contrib/issue-from-pytest-log@v0.1
        with:
          log-path: /tmp/workspace/logs/${{ needs.upstream-dev.outputs.artifact_name }}
