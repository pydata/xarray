name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: "0 0 * * *" # Daily “At 00:00” UTC
  workflow_dispatch: # allows you to trigger the workflow run manually

jobs:
  upstream-dev:
    name: upstream-dev
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8"]
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge
          mamba-version: "*"
          activate-environment: xarray-tests
          auto-update-conda: false
          python-version: ${{ matrix.python-version }}
      - name: Set up conda environment
        run: |
          mamba env update -f ci/requirements/upstream-dev.yml
          python -m pip install -i https://pypi.anaconda.org/scipy-wheels-nightly/simple \
                         --no-deps --pre --upgrade numpy scipy pandas 
          conda list
      - name: Run Tests
        run: |
          python -m pytest --verbose -rf > output-${{ matrix.python-version }}-log

      - name: Upload artifacts
        if: "failure()&&(github.event_name == 'schedule')&&(github.repository == 'pydata/xarray')" # Check the exit code of previous step
        uses: actions/upload-artifact@v2
        with:
          name: output-${{ matrix.python-version }}-log
          path: output-${{ matrix.python-version }}-log
          retention-days: 5

  report:
    name: report
    needs: upstream-dev
    if: "always()&&(github.event_name == 'schedule')&&(github.repository == 'pydata/xarray')"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          path: /tmp/workspace/logs
      - name: Move all log files into a single directory
        run: |
          rsync -a /tmp/workspace/logs/output-*/ ./logs
          ls -R ./logs

      - name: Create an issue
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const files = fs.readdirSync("./logs").filter(fn => fn.endsWith('log'));
            console.log(files);
            let logs = '';
            let file = '';
            let content = '';
            for (let i=0; i<files.length; i++) {
                file = files[i];
                content = fs.readFileSync(`./logs/${file}`, 'utf8');
                logs = "\n" + `${logs}` + `\n<details>\n<summary>\nPython ${file.split('-')[1]} Test Summary Info\n</summary>\n\n` + "```bash\n" + `${content}` + "\n" + "```\n</details>";
              };
            const title = "⚠️ Nightly upstream-dev CI failed ⚠️"
            const workflow_url = `https://github.com/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`
            const issue_body = `[Workflow Run URL](${workflow_url})\n${logs}`
            github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: issue_body,
              title: title,
              labels: ['CI']
             })
