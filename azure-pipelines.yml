trigger:
  - master

pr:
  - master

jobs:

- job: Linux
  strategy:
    matrix:
      py35-min:
        conda_env: py35-min
      py36:
        conda_env: py36
      py37:
        conda_env: py37
      py36-rasterio:
        conda_env: py36-rasterio
      py36-dask-dev:
        conda_env: py36-dask-dev
      py36-zarr-dev:
        conda_env: py36-zarr-dev
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - template: ci/azure/unit-tests.yml

- job: macOS
  strategy:
    matrix:
      py35-min:
        conda_env: py35-min
      py37:
        conda_env: py37
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - template: ci/azure/unit-tests.yml

- job: Windows
  strategy:
    matrix:
      py35-min:
        conda_env: py35-min
      py37:
        conda_env: py37
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - template: ci/azure/unit-tests.yml

- job: CodeChecks
  variables:
    conda_env: py37
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - template: ci/azure/install.yml
  - displayName: flake8 lint checks
    bash: |
      source activate test_env
      flake8
  - displayName: mypy type checks
    bash: |
      source activate test_env
      mypy .
    # allow mypy failures until we have a nice way of displaying results in
    # pull requests
    continueOnError: 'true'

- job: Docs
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - template: ci/azure/install.yml
    parameters:
      env_file: doc/requirements.yml
  - displayName: Build HTML docs
    bash: |
      conda activate test_env
      cd doc
      sphinx-build -n -j auto -b html -d _build/doctrees . _build/html

- job: Linux-Hypothesis
  variables:
    conda_env: py36-hypothesis
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - template: ci/azure/install.yml
  - displayName: Property based tests
    bash: |
      conda activate test_env
      pytest properties

- job: Linux-AllowedFailures
  strategy:
    matrix:
      py36-pandas-dev:
        conda_env: py36-pandas-dev
      py36-flakey:
        conda_env: py36
        pytest_extra_flags: --run-flaky --run-network-tests
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - template: ci/azure/unit-tests.yml
  continueOnError: 'true'
